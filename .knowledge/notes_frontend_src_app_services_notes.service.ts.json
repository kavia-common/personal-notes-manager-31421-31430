{"is_source_file": true, "format": "TypeScript", "description": "This file defines an Angular service called NotesService that manages CRUD operations for notes, including search filtering, local storage persistence, and sample data seeding.", "external_files": ["../models/note.model"], "external_methods": [], "published": ["setSearchTerm", "selectNote", "createNote", "updateNote", "deleteNote", "getNoteSnapshot"], "classes": [{"name": "NotesService", "description": "Angular service managing notes, providing observables for notes list and current selection, with persistence and filtering."}], "methods": [{"name": "uuid", "description": "Generates a UUID, using crypto.randomUUID if available, otherwise a fallback implementation."}, {"name": "safeLocalStorage", "description": "Provides safe access to localStorage if available, guarding against execution in non-browser environments."}, {"name": "persist", "description": "Serializes and saves current notes to localStorage."}, {"name": "loadFromStorage", "description": "Loads notes from localStorage or seeds initial sample data if storage is empty or unavailable."}, {"name": "seedSample", "description": "Initializes the notes list with sample notes when no existing storage data is found."}, {"name": "setSearchTerm", "description": "Sets the current search term used for filtering notes."}, {"name": "selectNote", "description": "Sets the currently selected note by ID."}, {"name": "createNote", "description": "Creates a new note with optional initial values, adds it to the list, and persists data."}, {"name": "updateNote", "description": "Updates an existing note identified by ID with provided fields and persists changes."}, {"name": "deleteNote", "description": "Deletes a note by ID and updates the persisted notes list."}, {"name": "getNoteSnapshot", "description": "Returns a current snapshot of a note by ID."}], "calls": ["combineLatest", "this.notesSubject.asObservable", "this.searchTermSubject.asObservable", "this.selectedIdSubject.asObservable", "map", "this.uuid", "this.safeLocalStorage", "ls.setItem", "ls.getItem", "JSON.parse", "JSON.stringify", "this.seedSample", "this.notesSubject.next", "this.persist", "new Date().toISOString()"], "search-terms": ["Angular service", "Notes management", "localStorage persistence", "observable filtering", "seed sample data", "search term filter", "Note model interface"], "state": 2, "file_id": 22, "knowledge_revision": 89, "git_revision": "", "revision_history": [{"45": ""}, {"84": ""}, {"89": ""}], "ctags": [{"_type": "tag", "name": "NotesService", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-31421-31430/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^export class NotesService {$/", "language": "TypeScript", "kind": "class"}, {"_type": "tag", "name": "STORAGE_KEY", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-31421-31430/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^  private readonly STORAGE_KEY = 'notes.v1';$/", "language": "TypeScript", "kind": "property", "scope": "NotesService", "scopeKind": "class"}, {"_type": "tag", "name": "cryptoAny", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-31421-31430/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^    const cryptoAny = globalThis.crypto as any;$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "filtered", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-31421-31430/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^      let filtered = notes;$/", "language": "TypeScript", "kind": "variable"}, {"_type": "tag", "name": "filtered", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-31421-31430/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^    const filtered = this.notesSubject.value.filter(n => n.id !== id);$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "g", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-31421-31430/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^      const g: any = globalThis as any;$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "idx", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-31421-31430/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^      ...notes[idx],$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "idx", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-31421-31430/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^    const idx = notes.findIndex(n => n.id === id);$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "ls", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-31421-31430/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^      const ls = this.safeLocalStorage;$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "note", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-31421-31430/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^    const note: Note = {$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "notes", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-31421-31430/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^    const notes = [note, ...this.notesSubject.value];$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "notes", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-31421-31430/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^    const notes = this.notesSubject.value.slice();$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "notesSubject", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-31421-31430/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^  private notesSubject = new BehaviorSubject<Note[]>([]);$/", "language": "TypeScript", "kind": "property", "scope": "NotesService", "scopeKind": "class"}, {"_type": "tag", "name": "now", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-31421-31430/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^    const now = new Date().toISOString();$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "r", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-31421-31430/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^      const r = (Math.random() * 16) | 0;$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "r", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-31421-31430/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^      const v = c === 'x' ? r : (r & 0x3) | 0x8;$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "raw", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-31421-31430/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^        const raw = ls.getItem(this.STORAGE_KEY);$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "samples", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-31421-31430/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^    const samples: Note[] = [$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "t", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-31421-31430/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^      const t = term.trim().toLowerCase();$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "updated", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-31421-31430/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^    const updated: Note = {$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "updatedAt", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-31421-31430/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^      updatedAt: new Date().toISOString()$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "v", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-31421-31430/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^      const v = c === 'x' ? r : (r & 0x3) | 0x8;$/", "language": "TypeScript", "kind": "constant"}], "hash": "9486662451b796d90e12a597cf687ea8", "format-version": 4, "code-base-name": "notes_frontend", "filename": "notes_frontend/src/app/services/notes.service.ts", "fields": [{"name": "private readonly STORAGE_KEY = 'notes.v1';", "scope": "NotesService", "scopeKind": "class", "description": "unavailable"}, {"name": "let filtered = notes;", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "private notesSubject = new BehaviorSubject<Note[]>([]);", "scope": "NotesService", "scopeKind": "class", "description": "unavailable"}]}