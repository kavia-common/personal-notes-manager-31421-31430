{"is_source_file": true, "format": "TypeScript", "description": "This file defines a resolver function for Angular routes that loads a Note object based on route parameters. It handles special cases like creating a new note or redirecting if the note is not found.", "external_files": ["../services/notes.service", "../models/note.model"], "external_methods": ["NotesService.createNote", "NotesService.getNoteSnapshot"], "published": ["noteResolver"], "classes": [], "methods": [{"name": "noteResolver", "description": "A route resolver function that fetches or creates a Note based on route parameters, performing navigation as needed."}], "calls": ["inject(NotesService)", "inject(Router)", "router.navigate", "svc.createNote", "svc.getNoteSnapshot"], "search-terms": ["noteResolver", "Angular route resolver", "Note object fetching", "NotesService", "note creation", "route param id"], "state": 2, "file_id": 23, "knowledge_revision": 47, "git_revision": "", "ctags": [{"_type": "tag", "name": "created", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-31421-31430/notes_frontend/src/app/resolvers/note.resolver.ts", "pattern": "/^    const created = svc.createNote();$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "noteResolver", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-31421-31430/notes_frontend/src/app/resolvers/note.resolver.ts", "pattern": "/^export const noteResolver: ResolveFn<Note | null> = (route, state) => {$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "snap", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-31421-31430/notes_frontend/src/app/resolvers/note.resolver.ts", "pattern": "/^  const snap = svc.getNoteSnapshot(id);$/", "language": "TypeScript", "kind": "constant"}], "hash": "e9b5fadd04bf0582f309cabdb7fddb0e", "format-version": 4, "code-base-name": "notes_frontend", "filename": "notes_frontend/src/app/resolvers/note.resolver.ts", "revision_history": [{"47": ""}]}